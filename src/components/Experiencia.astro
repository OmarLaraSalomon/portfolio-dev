---

import ExperienciaItem from "./ExperienciaItem.astro"

const EXPERIENCIA = [
  {
    date: "Actualmente...",
    title: "Creador de Contenido",
    company: "Youtube, Twitch y Tiktok",
    description:
      "Soy un creador de contenido enfocado en el sector del Desarollo Web, Aquí encontrarás , desde cursos de programación hasta tips. Y tambien realizamos pruebas técnicas desafíos divertidos.",
      links: [
      {
        text: "Ver YouTube",
        url: "https://www.youtube.com/channel/UCiIshJSQ080Pn3LGPCC4VKg"
      },

      {
        text: "Ver  Twitch",
        url: "https://www.twitch.tv/weskermexx/"
      },
      
      {
        text: "Ver Tiktok",
        url: "https://www.tiktok.com/@codigo_wiskas"
      },
    ]
  },

  {
    date: "Septiembre - Diciembre 2023",
    title: "Programador Frontend",
    company: "Tesca Corporation",
    description:
      "Creé y levanté proyectos mediante el uso de Django y Dockerizé dichos proyectos. Por otro lado aseguré la implementación y mantenimiento de funciones para el sistema empresarial."
  },

  {
    date: "Septiembre - Diciembre 2022",
    title: "Programador Backend",
    company: "Tesca Corporation",
    description:
      "Levanté y configuré entornos virtuales en Anaconda junto la implementación de base de datos PostgreSQL para el desarrollo de prácticas web con el Framework Django."
  },

  {
    date: "Septiembre - Diciembre 2021",
    title: "Auxiliar en área de Tecnología y Programación",
    company: "Tesca Corporation",
    description:
      "Implementé primeras versiones de página web de la empresa usando HTML y CSS"
  },


]


---


<!--Esta es la estructura principal  -->
<div class="flex flex-col grid-cols-9 p-7 mx-auto md:grid ">

        {
//POR CADA EXPERIENCIA SE VA A RENDERIZAR UN DIV Y EN EL DIV VAMOS A TENER EL EXPERIEENCIA  ITEM
EXPERIENCIA.map((experiencia, index) => ( //map para iterar sobre cada objeto en el array EXPERIENCIA.

// Determina si la experiencia actual debe estar a la derecha o izquierda  
//dependiendo si el índice es par o impar.
    <div class={`flex md:contents ${index % 2 === 0 ? 'flex-row-reverse' : ''}`}>

      {index % 2 === 0 ? (
        <> {/*envolver fragmentos del ternario */}
        
{/* Contenido para elementos en posiciones pares */}        
          <div class={`relative w-96 p-4 my-6  bg-[#01011bab] rounded-3xl  border-2 border-[#2a2a67a3]  hover:shadow-[0px_0px_0px_3px_#2a2a67a3]  transition duration-700 ease-in-out   col-start-1 col-end-5 mr-auto md:mr-0 md:ml-auto ${index % 2 !== 0 ? 'mt-10' : ''}`}>
            <ExperienciaItem {...experiencia} />
          </div>
          <div class="relative col-start-5 col-end-6 mr-7 md:mx-auto">
            <div class="flex items-center justify-center w-6 h-full">
              <div class="w-1 h-full bg-indigo-300 rounded-t-full bg-gradient-to-b from-indigo-400 to-indigo-300"></div>
            </div>
            <div class="absolute w-6 h-6 -mt-3 bg-white border-4 border-indigo-400 rounded-full top-1/2"></div>
          </div>
        </>
      ) : (
        
// Contenido para elementos en posiciones impares 
        <>
          <div class="relative col-start-5 col-end-6 mr-7 md:mx-auto">
            <div class="flex items-center justify-center w-6 h-full">
              <div class="w-1 h-full bg-indigo-300"></div>
            </div>
            <div class="absolute w-6 h-6 -mt-3 bg-white border-4 border-indigo-400 rounded-full top-1/2"></div>
          </div>
          <div class={`relative  w-96  p-4 my-6bg-[#01011bab] rounded-3xl  border-2 border-[#2a2a67a3]  hover:shadow-[0px_0px_0px_3px_#2a2a67a3]  transition duration-700 ease-in-out  col-start-6 col-end-10 mr-auto ${index % 2 !== 0 ? 'mt-10' : ''}`}>
            <ExperienciaItem {...experiencia} />
          </div>
        </>
      )}
    </div>
  ))}
</div>